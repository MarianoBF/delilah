openapi: "3.0.3"
info:
  title: "Delilah Restó"
  version: "1.0.0"
  description: "La api de un sistema de gestión de pedidos de comida"
  contact: 
    name: Mariano Fernández
paths:

  /pedidos:
    get:
      summary: "Acceso a pedidos"
      tags: 
        - "Pedidos"
      responses: 
        "200":
          description: "Recibir OK los pedidos existentes"
          content:
            application/json:
              schema:
                type: "array"
                items: 
                  $ref: "#components/schemas/Pedido"
          
  /pedido:
    post:
      summary: "Enviar un nuevo pedido"
      tags: 
        - "Pedidos"
      parameters:
        - name: Pedido
          in: path
          description: "Los detalles del pedido"
          required: true
          schema:
            type: object
      responses:
        "200":
          description: "Todo OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pedido'
  /pedido/{id_pedido}:
    get:
      summary: "Listar un pedido"
      tags: 
        - "Pedidos"
      parameters:
        - name: "Pedido"
          required: true
          in: path
          schema:
            type: "object"
            $ref: '#/components/schemas/Pedido'
      responses:
        "200":
          description: "OK"
          content: 
            application/json:
              schema:
                type: "object" 
                $ref: '#/components/schemas/Pedido'
        404:
          description: "Falló"
    put:
      summary: "Modificar algun pedido por id (sólo el estado)"
      tags: 
        - "Pedidos"
      parameters:
        - name: "Pedido"
          required: true
          in: path
          schema:
            type: "object"
            $ref: '#/components/schemas/Pedido'
      responses:
        "200":
          description: "OK"
          content: 
            application/json:
              schema:
                type: "object" 
                $ref: '#/components/schemas/Pedido'
        404:
          description: "Falló"
    delete:
      summary: "Borrar Pedido"
      tags: 
        - "Pedidos"
      responses: 
        200:
          description: "OK"
        404:
          description: "Problemassss"


  /usuarios:
    get:
      summary: "Acceso a listado de Usuarios"
      tags: 
        - "Usuarios"
      responses: 
        "200":
          description: "Recibir OK los usuarios existentes"
          content:
            application/json:
              schema:
                type: "array"
                items: 
                  $ref: "#components/schemas/Usuario"
          
  /usuario:
    post:
      tags: 
        - "Usuarios"
      summary: "Cargar un usuario"
      parameters:
        - name: Usuario
          in: path
          description: "Los detalles del usuario"
          required: true
          schema:
            type: object
      responses:
        "200":
          description: "Todo OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'

  /usuario/{id_usuario}:
    put:
      summary: "Modificar Usuario por id"
      tags: 
        - "Usuarios"
      parameters:
        - name: "Usuario"
          required: true
          in: path
          schema:
            type: "object"
            $ref: '#/components/schemas/Usuario'
      responses:
        "200":
          description: "OK"
          content: 
            application/json:
              schema:
                type: "object" 
                $ref: '#/components/schemas/Usuario'
        404:
          description: "Falló"
    delete:
      summary: "Borrar Usuario"
      tags: 
        - "Usuarios"
      responses: 
        200:
          description: "OK"
        404:
          description: "Problemassss"

              
  /productos:
    get:
      summary: "Listar productos"
      tags: 
        - "Productos"
      responses: 
        200:
          description: "Recibir los productos existentes"
          content:
            application/json:
              schema:
                type: "array"
                items: 
                  $ref: "#components/schemas/Producto"
        403:
          description: "No autorizado"
        500:
          description: "Internal server error"             
          
  /producto:
    post:
      tags: 
        - "Productos"
      summary: "Cargar un nuevo producto"
      parameters:
        - name: Producto
          in: path
          description: "Los detalles del producto"
          required: true
          schema:
            type: object
      responses:
        "200":
          description: "Todo OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producto'

  /producto/{id_producto}:
    put:
      summary: "Modificar Producto por id"
      tags: 
        - "Productos"
      parameters:
        - name: "Producto"
          required: true
          in: path
          schema:
            type: "object"
            $ref: '#/components/schemas/Producto'
      responses:
        "200":
          description: "OK"
          content: 
            application/json:
              schema:
                type: "object" 
                $ref: '#/components/schemas/Producto'
        404:
          description: "Falló"
    delete:
      summary: "Borrar Producto"
      tags: 
        - "Productos"
      responses: 
        200:
          description: "OK"
        404:
          description: "Problemassss"



  /detallePedidos:
    get:
      summary: "Listar Productos por pedido"
      tags: 
        - "Productos por Pedido"
      responses: 
        "200":
          description: "Recibir OK los productos existentes en el pedido"
          content:
            application/json:
              schema:
                type: "array"
                items: 
                  $ref: "#components/schemas/PedidoProducto"
          
  /detallePedido:
    post:
      tags: 
        - "Productos por Pedido"
      summary: "Cargar un nuevo producto en un pedido"
      parameters:
        - name: Producto
          in: path
          description: "Los detalles del producto"
          required: true
          schema:
            type: object
      responses:
        "200":
          description: "Todo OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PedidoProducto'

  /detallePedido/{id_PedidoProd}:
    put:
      summary: "Modificar Producto en Pedido por id del pedido_prod"
      tags: 
        - "Productos por Pedido"
      parameters:
        - name: "Producto"
          required: true
          in: path
          schema:
            type: "object"
            $ref: '#/components/schemas/PedidoProducto'
      responses:
        "200":
          description: "OK"
          content: 
            application/json:
              schema:
                type: "object" 
                $ref: '#/components/schemas/PedidoProducto'
        404:
          description: "Falló"
    delete:
      summary: "Borrar Producto en Pedido"
      tags: 
        - "Productos por Pedido"
      responses: 
        200:
          description: "OK"
        404:
          description: "Problemassss"




components:
  schemas:
    Usuario:
      type: "object"
      required:
        - id_usuario
        - nombre_usuario
        - nombre_completo
        - email
        - password
        - rol
      properties:
        id_usuario:
          type: "integer"
          readOnly: true
          example: 2
        nombre_completo: 
          type: "string"
          example: "Juan Pérez"
        nombre_usuario: 
          type: "string"
          example: jperez
        password: 
          type: "string"
          example: "12345678"
        email:
          type: "string"
          example: juan@perez.com
        rol:
          type: "string"
          enum: 
            - administrador
            - usuario
    Producto:
      type: "object"
      required:
        - id_producto
        - nombre
        - precio
      properties:
        id_producto:
          type: "integer"
          readOnly: true
          example: 1
        description:
          type: "string"
          example: "Descripción del producto"   
        nombre: 
          type: "string"
          example: "Producto de ejemplo"
        precio: 
          type: "integer"
          example: 100
    Pedido:
      type: "object"
      required:
        - id_pedido
        - estado
        - hora 
        - pago_via
        - pago_monto
        - observaciones
        - id_usuario
      properties:
        estado:
          type: "string"
          enum: 
            - nuevo
            - confirmado
            - preparado
            - enviando
            - cancelado
            - entregado
        id_pedido:
          type: "integer"
          readOnly: true
          example: 3
        hora:
          type: "string"
          format: "date"
          example: "2021-03-01 09:20:20"
        pago_via:
          type: "string"
          enum: 
          - efectivo
          - tarjeta
        pago_monto:
          type: "integer" 
          example: 1000        
        id_usuario: 
          type: "string"
          example: 3
        observaciones:
          type: "string"
          example: "Enviar servilletas extra"
    ProductoPedido:
      type: "object"
      required:
        - id_detallePedidos
        - id_producto
        - id_pedido
        - cantidad
      properties:
        id_detallePedidos:
          type: "integer"
          readOnly: true 
          example: 1  
        id_producto:
          type: "integer"
          example: 2
        id_pedido:
          type: "integer"
          example: 30
        cantidad: 
          type: "integer"
          example: 5

      
  