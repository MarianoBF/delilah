openapi: "3.0.3"
info:
  title: "Pedidos"
  version: "1.0.0"
  description: "La api de un sistema de gestión de pedidos de comida"
  contact:
    name: Mariano Fernández
servers:
  - url: "http://localhost:8500/api/v1/"

paths:
  /productos:
    get:
      summary: "Listar productos"
      tags:
        - "Productos"
      parameters:
        - $ref: "#components/parameters/AccessToken"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#components/schemas/Producto"
        "400":
          $ref: "#components/responses/DatosFaltantes"
        "401":
          $ref: "#components/responses/SinAcceso"
        "500":
          $ref: "#components/responses/ErrorServidor"
  /producto:
    post:
      summary: "Cargar un nuevo producto"
      tags:
        - "Productos"
      parameters:
        - $ref: "#components/parameters/AccessToken"
      requestBody:
        description: "Los detalles del producto"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Producto"
      responses:
        "200":
          description: "Todo OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Producto"
        "400":
          $ref: "#components/responses/DatosFaltantes"
        "401":
          $ref: "#components/responses/SinAcceso"
        "403":
          $ref: "#components/responses/NoAutorizado"
        "500":
          $ref: "#components/responses/ErrorServidor"
  /producto/{id_producto}:
    get:
      summary: "Listar Producto por id"
      tags:
        - "Productos"
      parameters:
        - $ref: "#components/parameters/AccessToken"
        - name: id_producto
          required: true
          in: path
          schema:
            type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/Producto"
        "400":
          $ref: "#components/responses/DatosFaltantes"
        "401":
          $ref: "#components/responses/SinAcceso"
        "403":
          $ref: "#components/responses/NoAutorizado"
        "500":
          $ref: "#components/responses/ErrorServidor"
    put:
      summary: "Modificar Producto por id"
      tags:
        - "Productos"
      parameters:
        - $ref: "#components/parameters/AccessToken"
        - name: id_producto
          required: true
          in: path
          schema:
            type: "integer"
      requestBody:
        description: "Los detalles del producto"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Producto"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/Producto"
        "400":
          $ref: "#components/responses/DatosFaltantes"
        "401":
          $ref: "#components/responses/SinAcceso"
        "403":
          $ref: "#components/responses/NoAutorizado"
        "500":
          $ref: "#components/responses/ErrorServidor"
    delete:
      summary: "Borrar Producto"
      tags:
        - "Productos"
      parameters:
        - $ref: "#components/parameters/AccessToken"
        - name: id_producto
          required: true
          in: path
          schema:
            type: "integer"
      responses:
        "200":
          description: "OK"
        "400":
          $ref: "#components/responses/DatosFaltantes"
        "401":
          $ref: "#components/responses/SinAcceso"
        "403":
          $ref: "#components/responses/NoAutorizado"
        "500":
          $ref: "#components/responses/ErrorServidor"

  /usuarios:
    get:
      summary: "Acceso a listado de Usuarios si es Admin o datos propios si es usuario regular"
      tags:
        - "Usuarios"
      parameters:
        - $ref: "#components/parameters/AccessToken"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#components/schemas/Usuario"
        "400":
          $ref: "#components/responses/DatosFaltantes"
        "401":
          $ref: "#components/responses/SinAcceso"
        "403":
          $ref: "#components/responses/NoAutorizado"
        "500":
          $ref: "#components/responses/ErrorServidor"

  /usuarios/checkmail/email:
      get:
        summary: "Chequear si el email puede ser usado"
        tags:
          - "Usuarios"
        parameters:
          - $ref: "#components/parameters/AccessToken"
        responses:
          "200":
            description: "OK"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    $ref: "#components/schemas/Usuario"
          "400":
            $ref: "#components/responses/DatosFaltantes"
          "401":
            $ref: "#components/responses/SinAcceso"
          "403":
            $ref: "#components/responses/NoAutorizado"
          "500":
            $ref: "#components/responses/ErrorServidor"

  /usuarios/refreshToken/email:
      get:
        summary: "Refrescar el token con uno renovado"
        tags:
          - "Usuarios"
        parameters:
          - $ref: "#components/parameters/AccessToken"
        responses:
          "200":
            description: "OK"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    $ref: "#components/schemas/Usuario"
          "400":
            $ref: "#components/responses/DatosFaltantes"
          "401":
            $ref: "#components/responses/SinAcceso"
          "403":
            $ref: "#components/responses/NoAutorizado"
          "500":
            $ref: "#components/responses/ErrorServidor"
          

  /usuario/login:
    post:
      summary: "Login de Usuarios"
      tags:
        - "Usuarios"
      requestBody:
        description: "Nombre de usuario y password"
        required: true
        content:
          application/json:
            schema:
              type: "object"
              required:
                - nombre_usuario
                - password
              properties:
                nombre_usuario:
                  type: "string"
                  example: jperez
                password:
                  type: "string"
                  example: "12345678"
      responses:
        "200":
          description: "Login OK"
          content:
            text/plain:
              schema:
                type: string
                description: JWT Token
                example: "eYhb1NiIsGciOiJIUzII..."
        "400":
          $ref: "#components/responses/DatosFaltantes"
        "500":
          $ref: "#components/responses/ErrorServidor"
  /usuario/crear:
    post:
      summary: "Crear un usuario (admin)"
      tags:
        - "Usuarios"
      requestBody:
        description: "Los detalles del usuario"
        required: true
        content:
          application/json:
            schema:
              type: "object"
              required:
                - nombre_usuario
                - nombre_completo
                - email
                - password
              properties:
                nombre_completo:
                  type: "string"
                  example: "Juan Pérez"
                nombre_usuario:
                  type: "string"
                  example: "jperez"
                direccion:
                  type: "string"
                  example: "Marcelo T. Alvear 1614 4°A"
                telefono:
                  type: "string"
                  example: "0303456 ext 2098"
                password:
                  type: "string"
                  example: "12345678"
                email:
                  type: "string"
                  example: juan@perez.com
      responses:
        "200":
          description: "Todo OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usuario"
        "400":
          $ref: "#components/responses/DatosFaltantes"
        "500":
          $ref: "#components/responses/ErrorServidor"
  /usuario/registro:
    post:
      summary: "Registrar un usuario (por propio usuario)"
      tags:
        - "Usuarios"
      requestBody:
        description: "Los detalles del usuario"
        required: true
        content:
          application/json:
            schema:
              type: "object"
              required:
                - nombre_usuario
                - nombre_completo
                - email
                - password
              properties:
                nombre_completo:
                  type: "string"
                  example: "Juan Pérez"
                nombre_usuario:
                  type: "string"
                  example: "jperez"
                direccion:
                  type: "string"
                  example: "Marcelo T. Alvear 1614 4°A"
                telefono:
                  type: "string"
                  example: "0303456 ext 2098"
                password:
                  type: "string"
                  example: "12345678"
                email:
                  type: "string"
                  example: juan@perez.com
      responses:
        "200":
          description: "Todo OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usuario"
        "400":
          $ref: "#components/responses/DatosFaltantes"
        "500":
          $ref: "#components/responses/ErrorServidor"

  /usuario/{id_usuario}:
    put:
      summary: "Modificar Usuario por id"
      tags:
        - "Usuarios"
      parameters:
        - $ref: "#components/parameters/AccessToken"
        - name: id_usuario
          required: true
          in: path
          schema:
            type: "integer"
      requestBody:
        description: "Los detalles del usuario"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Usuario"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/Usuario"
        "400":
          $ref: "#components/responses/DatosFaltantes"
        "401":
          $ref: "#components/responses/SinAcceso"
        "403":
          $ref: "#components/responses/NoAutorizado"
        "500":
          $ref: "#components/responses/ErrorServidor"
    delete:
      summary: "Borrar Usuario"
      tags:
        - "Usuarios"
      parameters:
        - $ref: "#components/parameters/AccessToken"
        - name: id_usuario
          required: true
          in: path
          schema:
            type: "integer"
      responses:
        "200":
          description: "OK"
        "400":
          $ref: "#components/responses/DatosFaltantes"
        "401":
          $ref: "#components/responses/SinAcceso"
        "403":
          $ref: "#components/responses/NoAutorizado"
        "500":
          $ref: "#components/responses/ErrorServidor"

  /pedidos:
    get:
      summary: "Acceso a pedidos, devuelve todos si es admin o los propios si es usuario"
      tags:
        - "Pedidos"
      parameters:
        - $ref: "#components/parameters/AccessToken"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#components/schemas/Pedido"
        "400":
          $ref: "#components/responses/DatosFaltantes"
        "401":
          $ref: "#components/responses/SinAcceso"
        "403":
          $ref: "#components/responses/NoAutorizado"
        "500":
          $ref: "#components/responses/ErrorServidor"

  /pedido:
    post:
      summary: "Enviar un nuevo pedido"
      tags:
        - "Pedidos"
      parameters:
        - $ref: "#components/parameters/AccessToken"
      requestBody:
        description: "Los detalles del pedido"
        required: true
        content:
          application/json:
            schema:
              type: "object"
              required:
                - hora
                - pago_via
                - pago_monto
                - observaciones
              properties:
                hora:
                  type: "string"
                  format: "date"
                  example: "2021-03-01 09:20:20"
                pago_via:
                  type: "string"
                  enum:
                    - efectivo
                    - tarjeta
                pago_monto:
                  type: "integer"
                  example: "1000"
                observaciones:
                  type: "string"
                  example: "Enviar servilletas extra"
      responses:
        "200":
          description: "Todo OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pedido"


        "400":
          $ref: "#components/responses/DatosFaltantes"
        "403":
          $ref: "#components/responses/NoAutorizado"
        "500":
          $ref: "#components/responses/ErrorServidor"
  /pedido/{id_pedido}:
    patch:
      summary: "Modificar el estado de un pedido"
      tags:
        - "Pedidos"
      parameters:
        - $ref: "#components/parameters/AccessToken"
        - name: "id_pedido"
          required: true
          in: path
          schema:
            type: "integer"
      requestBody:
        description: "Nuevo estado"
        required: true
        content:
          application/json:
            schema:
              type: "object"
              required:
                - estado
              properties:
                estado:
                  type: "string"
                  example: "cancelado"     
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/Pedido"
        "400":
          $ref: "#components/responses/DatosFaltantes"
        "401":
          $ref: "#components/responses/SinAcceso"
        "403":
          $ref: "#components/responses/NoAutorizado"
        "500":
          $ref: "#components/responses/ErrorServidor"
    delete:
      summary: "Borrar Pedido"
      tags:
        - "Pedidos"
      parameters:
        - $ref: "#components/parameters/AccessToken"
        - name: "id_pedido"
          required: true
          in: path
          schema:
            type: "integer"
      responses:
        "200":
          description: "OK"
        "400":
          $ref: "#components/responses/DatosFaltantes"
        "401":
          $ref: "#components/responses/SinAcceso"
        "403":
          $ref: "#components/responses/NoAutorizado"
        "500":
          $ref: "#components/responses/ErrorServidor"

  /pedidoObs/{id_pedido}:
    patch:
      summary: "Modificar las observaciones de un pedido"
      tags:
        - "Pedidos"
      parameters:
        - $ref: "#components/parameters/AccessToken"
        - name: "id_pedido"
          required: true
          in: path
          schema:
            type: "integer"
      requestBody:
        description: "Nuevo estado"
        required: true
        content:
          application/json:
            schema:
              type: "object"
              required:
                - estado
              properties:
                estado:
                  type: "string"
                  example: "cancelado"     
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/Pedido"
        "400":
          $ref: "#components/responses/DatosFaltantes"
        "401":
          $ref: "#components/responses/SinAcceso"
        "403":
          $ref: "#components/responses/NoAutorizado"
        "500":
          $ref: "#components/responses/ErrorServidor"

  /pedidoAmo/{id_pedido}:
    patch:
      summary: "Modificar el monto total de un pedido"
      tags:
        - "Pedidos"
      parameters:
        - $ref: "#components/parameters/AccessToken"
        - name: "id_pedido"
          required: true
          in: path
          schema:
            type: "integer"
      requestBody:
        description: "Nuevo estado"
        required: true
        content:
          application/json:
            schema:
              type: "object"
              required:
                - estado
              properties:
                estado:
                  type: "string"
                  example: "cancelado"     
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/Pedido"
        "400":
          $ref: "#components/responses/DatosFaltantes"
        "401":
          $ref: "#components/responses/SinAcceso"
        "403":
          $ref: "#components/responses/NoAutorizado"
        "500":
          $ref: "#components/responses/ErrorServidor"

  /detallePedidos:
    get:
      summary: "Listar Productos por pedido para todos los pedidos"
      tags:
        - "Productos por Pedido"
      parameters:
        - $ref: "#components/parameters/AccessToken"
      responses:
        "200":
          description: "Recibir todos los productos de los pedidos"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#components/schemas/DetallePedido"
        "400":
          $ref: "#components/responses/DatosFaltantes"
        "401":
          $ref: "#components/responses/SinAcceso"
        "403":
          $ref: "#components/responses/NoAutorizado"
        "500":
          $ref: "#components/responses/ErrorServidor"

  /detallePedido/{id_pedido}:
    get:
      summary: "Listar Productos de un pedido"
      tags:
        - "Productos por Pedido"
      parameters:
        - $ref: "#components/parameters/AccessToken"
        - name: "id_pedido"
          required: true
          in: path
          schema:
            type: "integer"
      responses:
        "200":
          description: "Recibir OK los productos existentes en el pedido"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#components/schemas/DetallePedido"
        "400":
          $ref: "#components/responses/DatosFaltantes"
        "401":
          $ref: "#components/responses/SinAcceso"
        "403":
          $ref: "#components/responses/NoAutorizado"
        "500":
          $ref: "#components/responses/ErrorServidor"
    post:
      tags:
        - "Productos por Pedido"
      summary: "Cargar un nuevo producto en un pedido"
      parameters:
        - $ref: "#components/parameters/AccessToken"
        - name: "id_pedido"
          required: true
          in: path
          schema:
            type: "integer"
      requestBody:
        description: "Los detalles del producto a agregar"
        required: true
        content:
          application/json:
            schema:
              type: "object"
              required:
                - id_producto
                - cantidad_producto
              properties:
                id_producto:
                  type: "integer"
                  example: "2"
                cantidad_producto:
                  type: "integer"
                  example: "5"
      responses:
        "200":
          description: "Todo OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DetallePedido"
        "400":
          $ref: "#components/responses/DatosFaltantes"
        "401":
          $ref: "#components/responses/SinAcceso"
        "403":
          $ref: "#components/responses/NoAutorizado"
        "500":
          $ref: "#components/responses/ErrorServidor"

  /detallePedido/{id_detallePedido}:
    put:
      summary: "Modificar Producto en Pedido por id del pedido_prod"
      tags:
        - "Productos por Pedido"
      parameters:
        - $ref: "#components/parameters/AccessToken"
        - name: "id_detallePedido"
          required: true
          in: path 
          schema:
            type: "integer"
      requestBody:
        description: "Los detalles del producto a cambiar"
        required: true
        content:
          application/json:
            schema:
              type: "object"
              required:
                - id_producto
                - cantidad_producto
              properties:
                id_producto:
                  type: "integer"
                  example: "2"
                cantidad_producto:
                  type: "integer"
                  example: "5"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/DetallePedido"
        "400":
          $ref: "#components/responses/DatosFaltantes"
        "401":
          $ref: "#components/responses/SinAcceso"
        "403":
          $ref: "#components/responses/NoAutorizado"
        "500":
          $ref: "#components/responses/ErrorServidor"
    delete:
      summary: "Borrar Producto en Pedido"
      tags:
        - "Productos por Pedido"
      parameters:
        - $ref: "#components/parameters/AccessToken"
        - name: "id_detallePedido"
          required: true
          in: path
          schema:
            type: "integer"
      responses:
        "200":
          description: "OK"
        "400":
          $ref: "#components/responses/DatosFaltantes"
        "401":
          $ref: "#components/responses/SinAcceso"
        "403":
          $ref: "#components/responses/NoAutorizado"
        "500":
          $ref: "#components/responses/ErrorServidor"

tags:
  - name: "Productos"
    description: "ABM de productos"
  - name: "Usuarios"
    description: "ABM de usuarios y login"
  - name: "Pedidos"
    description: "En /pedido y /pedidos se crea la estructura del pedido con los datos generales. Para la carga de productos ver /detallePedido"
  - name: "Productos por Pedido"
    description: "Los endpoints con este tag permiten agregar productos a un pedido en particular, listar todos los agregados a un pedido y a su vez modificar/borrar para un pedido existente"



components:
  schemas:
    Usuario:
      type: "object"
      required:
        - id_usuario
        - nombre_usuario
        - nombre_completo
        - direccion
        - telefono
        - email
        - password
        - rol
      properties:
        id_usuario:
          type: "integer"
          readOnly: true
          example: "2"
        nombre_completo:
          type: "string"
          example: "Juan Pérez"
        nombre_usuario:
          type: "string"
          example: jperez
        direccion:
          type: "string"
          example: "Marcelo T. Alvear 1614 4°A"
        telefono:
          type: "string"
          example: "+54 9 11 5211 1111"
        password:
          type: "string"
          example: "12345678"
        email:
          type: "string"
          example: juan@perez.com
        rol:
          type: "string"
          enum:
            - usuario
            - administrador
    Producto:
      type: "object"
      required:
        - id_producto
        - nombre
        - precio
      properties:
        id_producto:
          type: "integer"
          readOnly: true
          example: "1"
        descripcion:
          type: "string"
          example: "Descripción del producto"
        nombre:
          type: "string"
          example: "Producto de ejemplo"
        precio:
          type: "integer"
          example: "100"
    Pedido:
      type: "object"
      required:
        - id_pedido
        - estado
        - hora
        - pago_via
        - pago_monto
        - observaciones
        - id_usuario
      properties:
        estado:
          type: "string"
          enum:
            - nuevo
            - confirmado
            - preparando
            - enviando
            - cancelado
            - entregado
        id_pedido:
          type: "integer"
          readOnly: true
          example: "3"
        hora:
          type: "string"
          format: "date"
          example: "2021-03-01 09:20:20"
        pago_via:
          type: "string"
          enum:
            - efectivo
            - tarjeta
        pago_monto:
          type: "integer"
          example: "1000"
        id_usuario:
          type: "string"
          example: "3"
        observaciones:
          type: "string"
          example: "Enviar servilletas extra"
    DetallePedido:
      type: "object"
      required:
        - id_detallePedido
        - id_producto
        - id_pedido
        - cantidad_producto
      properties:
        id_detallePedido:
          type: "integer"
          readOnly: true
          example: "1"
        id_producto:
          type: "integer"
          example: "2"
        id_pedido:
          type: "integer"
          example: "30"
        cantidad_producto:
          type: "integer"
          example: "5"

  responses:
    SinAcceso:
      description: El token de acceso no es válido o está vacío.
    NoAutorizado:
      description: No está autorizado a realizar la operación.
    ErrorServidor:
      description: Se produjo un error al procesar la operación, reintente.
    DatosFaltantes:
      description: Los datos enviados son incorrectos o incompletos, reintente.

  parameters:
    AccessToken:
      name: "x-access-token"
      in: header
      description: Access Token.
      required: true
      schema:
        type: string
